<%- include("partials/header") %>
<div class="main-container">
	<div class="left-container">
		<div class="upload-img" style="position: relative">
			<div class="upload-section" id="upload-section">
				<label for="file-upload" class="upload-label">
					Upload an Image
					<input
						type="file"
						id="file-upload"
						class="upload-input"
						accept="image/*"
					/>
				</label>
			</div>
			<div
				class="preview-section"
				id="preview-section"
				style="display: none"
			>
				<div class="loading-overlay" id="loading-overlay">
					<div class="spinner"></div>
				</div>
				<img id="preview" alt="Preview" />
				<button id="remove-btn" class="remove-btn">X</button>
			</div>
			<button class="calculate-btn">Calculate</button>
		</div>
		<div class="chat">
			<textarea
				id="chat-area"
				class="chat-area"
				placeholder="Enter additional information (Optional)"
			></textarea>
		</div>
	</div>
	<div class="right-container">
		<div class="ingredients">
			<div class="ingredients-header">
				<h3>Ingredients</h3>
				<button class="add-ingredient-btn">+ Add</button>
			</div>
			<div class="ingredients-list"></div>
			<div class="total-calories"></div>
		</div>
	</div>
</div>
<script>
	const fileInput = document.getElementById("file-upload");
	const previewImage = document.getElementById("preview");
	const uploadSection = document.getElementById("upload-section");
	const previewSection = document.getElementById("preview-section");
	const removeButton = document.getElementById("remove-btn");
	const calculateButton = document.querySelector(".calculate-btn");
	const chatArea = document.getElementById("chat-area");
	const ingredientList = document.querySelector(".ingredients-list");
	const displayTotalCals = document.querySelector(".total-calories");
	const addIngredientBtn = document.querySelector(".add-ingredient-btn");
	const loadingOverlay = document.getElementById("loading-overlay");
	const validFileTypes = [
		"image/jpeg",
		"image/png",
		"image/jpg",
		"image/gif",
		"image/webp",
	];

	let prevFoodOjbs = undefined;
	let imgData = undefined;
	let originalImage = undefined;
	let imgFileType = undefined;
	let totalCals = 0;
	let isImageProcessed = false;

	function reset() {
		prevFoodOjbs = undefined;
		imgData = undefined;
		originalImage = undefined;
		imgFileType = undefined;
		isImageProcessed = false;
		totalCals = 0;
		calculateButton.innerHTML = "Calculate";
		displayTotalCals.textContent = "";
		ingredientList.innerHTML = "";
		previewImage.src = "";
		previewSection.style.display = "none";
		uploadSection.style.display = "flex";
	}

	function resetFileInput() {
		fileInput.value = ""; // Clear the file input value
	}

	fileInput.addEventListener("change", (event) => {
		const file = event.target.files[0];
		if (file) {
			console.log("File type " + file.type);
			imgFileType = file.type;

			if (!validFileTypes.includes(imgFileType)) {
				alert("Please upload a valid image file.");
				resetFileInput();
				return;
			}

			console.log("Reading Image ...");
			const reader = new FileReader();
			reader.onload = (e) => {
				if (!isImageProcessed) {
					originalImage = e.target.result;
				}
				imgData = e.target.result;
				previewImage.src = e.target.result;
				uploadSection.style.display = "none";
				previewSection.style.display = "flex";
			};
			reader.readAsDataURL(file);
		}
	});

	// Add Ingredient
	addIngredientBtn.addEventListener("click", () => {
		const newItem = document.createElement("div");
		newItem.classList.add("ingredient-item");
		newItem.innerHTML = `
	       <div class="ingredient-details">
	           <input type="text" class="edit-input" placeholder="Ingredient Name" />
	       </div>
	       <div class="ingredient-calories">
	           <input type="number" class="edit-input" placeholder="Calories" />
	       </div>
	       <div class="ingredient-actions">
	           <button class="save-btn">✔️</button>
	           <button class="cancel-btn">❌</button>
	       </div>
	   `;
		ingredientList.appendChild(newItem);

		const nameInput = newItem.querySelector("input[type='text']");
		const calInput = newItem.querySelector("input[type='number']");
		nameInput.focus();

		const saveBtn = newItem.querySelector(".save-btn");
		const cancelBtn = newItem.querySelector(".cancel-btn");

		saveBtn.addEventListener("click", () => {
			const name = nameInput.value.trim();
			const calories = parseInt(calInput.value);

			if (!name || isNaN(calories) || calories <= 0) {
				alert("Please enter a valid ingredient name and calories.");
				return;
			}

			const newIngredient = document.createElement("div");
			newIngredient.classList.add("ingredient-item");
			newIngredient.innerHTML = `
	           <div class="ingredient-details">
	               <span class="ingredient-name">${name}</span>
	           </div>
	           <div class="ingredient-calories">${calories} Calories</div>
	           <div class="ingredient-actions">
	               <button class="edit-btn">✏️</button>
	               <button class="remove-btn">X</button>
	           </div>
	       `;

			ingredientList.appendChild(newIngredient);

			totalCals += calories;
			displayTotalCals.textContent = `Total: ${totalCals} Calories`;

			const editBtn = newIngredient.querySelector(".edit-btn");
			const removeBtn = newIngredient.querySelector(".remove-btn");

			editBtn.addEventListener("click", () => {
				editIngredient(newIngredient, name, calories);
			});

			removeBtn.addEventListener("click", () => {
				totalCals -= calories;
				displayTotalCals.textContent = `Total: ${totalCals} Calories`;
				newIngredient.remove();
			});

			newItem.remove();
		});

		cancelBtn.addEventListener("click", () => {
			newItem.remove();
		});
	});

	function editIngredient(item, currentName, currentCals) {
		const nameSpan = item.querySelector(".ingredient-name");
		const calorieDiv = item.querySelector(".ingredient-calories");

		const nameInput = document.createElement("input");
		nameInput.type = "text";
		nameInput.value = currentName;
		nameInput.classList.add("edit-input");

		const calInput = document.createElement("input");
		calInput.type = "number";
		calInput.value = currentCals;
		calInput.classList.add("edit-input");

		nameSpan.replaceWith(nameInput);
		calorieDiv.replaceWith(calInput);

		const actionsDiv = item.querySelector(".ingredient-actions");
		actionsDiv.innerHTML = `
	       <button class="save-btn">✔️</button>
	       <button class="cancel-btn">❌</button>
	   `;

		const saveBtn = actionsDiv.querySelector(".save-btn");
		const cancelBtn = actionsDiv.querySelector(".cancel-btn");

		saveBtn.addEventListener("click", () => {
			const newName = nameInput.value.trim();
			const newCals = parseInt(calInput.value);

			if (!newName || isNaN(newCals) || newCals <= 0) {
				alert("Please enter valid values.");
				return;
			}

			const updatedNameSpan = document.createElement("span");
			updatedNameSpan.classList.add("ingredient-name");
			updatedNameSpan.textContent = newName;

			const updatedCalDiv = document.createElement("div");
			updatedCalDiv.classList.add("ingredient-calories");
			updatedCalDiv.textContent = `${newCals} Calories`;

			nameInput.replaceWith(updatedNameSpan);
			calInput.replaceWith(updatedCalDiv);

			totalCals = totalCals - currentCals + newCals;
			displayTotalCals.textContent = `Total: ${totalCals} Calories`;

			actionsDiv.innerHTML = `
	           <button class="edit-btn">✏️</button>
	           <button class="remove-btn">X</button>
	       `;

			const editBtn = actionsDiv.querySelector(".edit-btn");
			const removeBtn = actionsDiv.querySelector(".remove-btn");

			editBtn.addEventListener("click", () => {
				editIngredient(item, newName, newCals);
			});

			removeBtn.addEventListener("click", () => {
				totalCals -= newCals;
				displayTotalCals.textContent = `Total: ${totalCals} Calories`;
				item.remove();
			});
		});

		cancelBtn.addEventListener("click", () => {
			const originalNameSpan = document.createElement("span");
			originalNameSpan.classList.add("ingredient-name");
			originalNameSpan.textContent = currentName;

			const originalCalDiv = document.createElement("div");
			originalCalDiv.classList.add("ingredient-calories");
			originalCalDiv.textContent = `${currentCals} Calories`;

			nameInput.replaceWith(originalNameSpan);
			calInput.replaceWith(originalCalDiv);

			actionsDiv.innerHTML = `
	           <button class="edit-btn">✏️</button>
	           <button class="remove-btn">X</button>
	       `;

			const editBtn = actionsDiv.querySelector(".edit-btn");
			const removeBtn = actionsDiv.querySelector(".remove-btn");

			editBtn.addEventListener("click", () => {
				editIngredient(item, currentName, currentCals);
			});

			removeBtn.addEventListener("click", () => {
				totalCals -= currentCals;
				displayTotalCals.textContent = `Total: ${totalCals} Calories`;
				item.remove();
			});
		});
	}

	removeButton.addEventListener("click", () => {
		reset();
		resetFileInput();
	});

	calculateButton.addEventListener("click", async () => {
		if (!imgData) {
			alert("Please upload an image first.");
			return;
		}

		const dataList = originalImage.split(",");
		const base64 = dataList[1];
		const userContext = chatArea.value;
		chatArea.value = "";


			loadingOverlay.style.display = "flex"; // Show the overlay

			const response = await fetch("/upload", {
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					image: base64,
					type: imgFileType,
					userContext: userContext,
					prevFoodData: prevFoodOjbs,
					mock: false,
				}),
			});
			loadingOverlay.style.display = "none";

		if (!response.ok) {
			loadingOverlay.style.display = "none";
			throw new Error("Failed to process the image.");
		}

		const responseData = await response.json();
		ingredientList.innerHTML = "";

		const processedBase64 = responseData.image;
		const processedType = responseData.type || imgFileType;
		const processedDataUrl = `data:${processedType};base64,${processedBase64}`;
		previewImage.src = processedDataUrl;

		prevFoodOjbs = responseData.foodData;
		totalCals = 0;

		responseData.foodData.forEach((foodObj) => {
			const item = document.createElement("div");
			item.classList.add("ingredient-item");

			item.innerHTML = `
	           <div class="ingredient-details">
	               <span class="ingredient-name">${foodObj.element}</span>
	           </div>
	           <div class="ingredient-calories">${foodObj.estimated_cals} Calories</div>
	           <div class="ingredient-actions">
	               <button class="edit-btn">✏️</button>
	               <button class="remove-btn">X</button>
	           </div>
	       `;

			totalCals += foodObj.estimated_cals;
			ingredientList.appendChild(item);

			const editBtn = item.querySelector(".edit-btn");
			const removeBtn = item.querySelector(".remove-btn");

			editBtn.addEventListener("click", () => {
				editIngredient(item, foodObj.element, foodObj.estimated_cals);
			});

			removeBtn.addEventListener("click", () => {
				totalCals -= foodObj.estimated_cals;
				displayTotalCals.textContent = `Total: ${totalCals} Calories`;
				item.remove();
			});
		});

		displayTotalCals.textContent = `Total: ${totalCals} Calories`;
		calculateButton.textContent = "Recalculate";
	});
</script>
